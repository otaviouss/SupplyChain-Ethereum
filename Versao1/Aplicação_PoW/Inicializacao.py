# Aplicação Python para utilização do contrato Inicializacao_v1

from web3 import Web3
import json

web3 = Web3(Web3.HTTPProvider("http://127.0.0.1:8545"))

web3.eth.defaultAccount = web3.eth.accounts[0]

abi = json.loads('[{"inputs":[],"stateMutability":"payable","type":"constructor"},{"inputs":[{"internalType":"address","name":"usuario","type":"address"},{"internalType":"string","name":"label","type":"string"}],"name":"addUsuario","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"quantidadeUsuarios","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"usuario","type":"address"}],"name":"verificarUsuario","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}]')

bytecode = '60806040526000600255336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160405180604001604052806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016040518060400160405280600581526020017f41646d696e000000000000000000000000000000000000000000000000000000815250815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061015892919061016c565b505050600160025401600281905550610211565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101ad57805160ff19168380011785556101db565b828001600101855582156101db579182015b828111156101da5782518255916020019190600101906101bf565b5b5090506101e891906101ec565b5090565b61020e91905b8082111561020a5760008160009055506001016101f2565b5090565b90565b6104ce806102206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630e232a20146100465780637706558214610121578063b6f44bcd1461013f575b600080fd5b61011f6004803603604081101561005c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561009957600080fd5b8201836020820111156100ab57600080fd5b803590602001918460018302840111640100000000831117156100cd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061019b565b005b61012961030c565b6040518082815260200191505060405180910390f35b6101816004803603602081101561015557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610316565b604051808215151515815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610240576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001806104666033913960400191505060405180910390fd5b600160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906102f99291906103c0565b5050506001600254016002819055505050565b6000600254905090565b60008060009050600090505b6002548110156103b5578273ffffffffffffffffffffffffffffffffffffffff166001828154811061035057fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103a85760019150506103bb565b8080600101915050610322565b60009150505b919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061040157805160ff191683800117855561042f565b8280016001018555821561042f579182015b8281111561042e578251825591602001919060010190610413565b5b50905061043c9190610440565b5090565b61046291905b8082111561045e576000816000905550600101610446565b5090565b9056fe4170656e6173206f2061646d696e6973747261646f7220706f646520657865637574617220657373612066756ec3a7c3a36f2ea264697066735822122091da03fc4adfe4ba5760132443010553e4428e0e3728544da44ab7e8d961a91064736f6c63430006040033'

Fila = web3.eth.contract(abi=abi, bytecode=bytecode)

tx_hash = "0x3b722a5c7af9275951ca2d2101790311d7e3dc8158b68587c69c56fcd86dd0b6"

tx_receipt = web3.eth.getTransactionReceipt(tx_hash)

contractInicializacao= web3.eth.contract(
    address=tx_receipt.contractAddress,
    abi=abi
)

x = -1
while(x!=0):
    print("Menu")
    print("0 - Sair")
    print("1 - Adicionar")
    print("2 - Verificar")
    x  = int(input())
    if (x == 0):
        break
    elif (x == 1):
        print("--- Adicionar ---")
        addr = input("Endereço: ")
        nome = input("Nome: ")
        valid_address = web3.toChecksumAddress(addr)
        tx_hash = contractInicializacao.functions.addUsuario(valid_address, nome).transact()
        tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)
    elif (x == 2):
        print("--- Verificar ---")
        addr = input("Endereço: ")
        valid_address = web3.toChecksumAddress(addr)
        print(contractInicializacao.functions.verificarUsuario(valid_address).call())
